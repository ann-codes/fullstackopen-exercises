{"version":3,"sources":["services/axiosService.js","components/InputField.js","components/MessageBlock.js","components/App.js","index.js"],"names":["baseUrl","axios","get","newObject","post","id","put","delete","InputField","props","title","name","inputName","value","inputValue","onChange","handleChange","MessageBlock","messageType","message","className","setTimeout","setMessageType","App","useState","persons","setPersons","number","newName","setNewName","filter","setFilter","messageName","setMessageName","useEffect","axiosSvs","then","response","data","handleNameChange","e","target","deleteData","getAttribute","filteredDeleted","person","window","confirm","find","console","log","catch","error","mapPhonebook","toLowerCase","includes","sort","a","b","map","key","data-id","data-name","onClick","onSubmit","preventDefault","findName","filterEdited","length","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a58aa76f.chunk.js","sourcesContent":["import axios from \"axios\";\nconst baseUrl = \"/api/persons\";\n// const baseUrl = \"http://localhost:3001/api/persons/\";\n\nconst getAll = () => {\n  return axios.get(baseUrl);\n};\n\nconst create = (newObject) => {\n  return axios.post(baseUrl, newObject);\n};\n\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject);\n};\n\nconst deleteItem = (id) => {\n  return axios.delete(`${baseUrl}/${id}`);\n};\n\nexport default {\n  getAll,\n  create,\n  update,\n  deleteItem\n};\n","import React from \"react\";\n\nconst InputField = (props) => {\n  return (\n    <p>\n      {props.title}:{\" \"}\n      <input\n        name={props.inputName}\n        value={props.inputValue}\n        onChange={props.handleChange}\n      />\n    </p>\n  );\n};\n\nexport default InputField;\n","import React, { Fragment } from \"react\";\n\nconst MessageBlock = (props) => {\n  const { messageType } = props;\n  let message = \"\";\n\n  if (messageType === \"added\") {\n    message = (\n      <div className=\"success fade-out\">\n        {props.name} was added to the Phonebook.\n      </div>\n    );\n  } else if (messageType === \"edited\") {\n    message = (\n      <div className=\"notice fade-out\">\n        {props.name} was edited in the Phonebook.\n      </div>\n    );\n  } else if (messageType === \"deleted\") {\n    message = (\n      <div className=\"warning fade-out\">\n        {props.name} was deleted from the Phonebook\n      </div>\n    );\n  } else if (messageType === \"editError\") {\n    message = (\n      <div className=\"warning fade-out\">\n        {props.name} is no longer in the Phonebook\n      </div>\n    );\n  } else if (messageType === \"validationError\") {\n    message = (\n      <div className=\"warning fade-out\">\n        {props.name}\n      </div>\n    );\n  }\n\n  setTimeout(() => props.setMessageType(\"\"), 5000);\n\n\n  return <Fragment>{message}</Fragment>;\n};\n\nexport default MessageBlock;\n","import React, { useState, useEffect } from \"react\";\nimport axiosSvs from \"../services/axiosService\";\n\nimport InputField from \"./InputField\";\nimport MessageBlock from \"./MessageBlock\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState({ name: \"\", number: \"\" });\n  const [filter, setFilter] = useState(\"\");\n  const [messageType, setMessageType] = useState(\"\");\n  const [messageName, setMessageName] = useState(\"\");\n\n  const fetchData = () => {\n    axiosSvs.getAll().then((response) => setPersons(response.data));\n  };\n\n  useEffect(fetchData, []);\n\n  const handleNameFilter = (e) => {\n    setFilter(e.target.value);\n  };\n\n  const handleNameChange = (e) => {\n    setNewName({ ...newName, [e.target.name]: e.target.value });\n  };\n\n  const submitData = (e) => {\n    e.preventDefault();\n\n    const findName = persons.find(\n      (person) => person.name.toLowerCase() === newName.name.toLowerCase()\n    );\n\n    if (findName) {\n      const confirmEdit = window.confirm(\n        `${findName.name} is already in the Phonebook. Do you want to replace their number?`\n      );\n\n      // editing entry\n      if (confirmEdit) {\n        axiosSvs\n          .update(findName.id, newName)\n          .then((response) => {\n            const filterEdited = persons.filter(\n              (person) => person.id !== findName.id\n            );\n            setMessageName(response.data.name);\n            setMessageType(\"edited\");\n            setPersons([...filterEdited, response.data]);\n            setNewName({ name: \"\", number: \"\" });\n          })\n          .catch((error) => {\n            setMessageType(\"editError\");\n            setMessageName(newName.name);\n            console.log(`ERROR ====> ${error}`);\n          });\n      }\n    } else {\n      // creating new entry\n      axiosSvs\n        .create({ ...newName, id: persons[persons.length - 1].id + 1 })\n        .then((response) => {\n          setMessageName(response.data.name);\n          setMessageType(\"added\");\n          setPersons([...persons, response.data]);\n          setNewName({ name: \"\", number: \"\" });\n        })\n        .catch((error) => {\n          console.log(\"Error at ===============> \", error.response.data.error);\n          setMessageName(error.response.data.error);\n          setMessageType(\"validationError\");\n        });\n    }\n  };\n\n  const deleteData = (e) => {\n    const id = e.target.getAttribute(\"data-id\");\n    const filteredDeleted = persons.filter((person) => person.id !== id);\n    const confirmDelete = window.confirm(\n      `Are you sure you want to delete ${e.target.getAttribute(\"data-name\")}?`\n    );\n    if (confirmDelete) {\n      // deleting entry\n      setMessageName(persons.find((person) => person.id === id).name);\n      setMessageType(\"deleted\");\n      axiosSvs\n        .deleteItem(id)\n        .then((response) => {\n          console.log(\"Confirm deleted ===>\", response);\n        })\n        .catch((error) => {\n          console.log(\"Deletion Error ===> \", error);\n        });\n\n      setPersons(filteredDeleted);\n    }\n  };\n\n  const filteredBook = persons.filter((person) =>\n    person.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  const mapPhonebook = filteredBook\n    .sort((a, b) => a.id - b.id)\n    .map((person) => (\n      <li key={person.id}>\n        {person.name}: {person.number}{\" \"}\n        <button\n          data-id={person.id}\n          data-name={person.name}\n          onClick={deleteData}\n        >\n          Delete\n        </button>\n      </li>\n    ));\n\n  return (\n    <div>\n      <h1>PhoneBook</h1>\n\n      <MessageBlock\n        name={messageName}\n        setMessageType={setMessageType}\n        messageType={messageType}\n      />\n\n      <InputField\n        title=\"filter shown with\"\n        inputName=\"filterName\"\n        inputValue={filter}\n        handleChange={handleNameFilter}\n      />\n      <h2>Add New</h2>\n      <form onSubmit={submitData}>\n        <div>\n          <InputField\n            title=\"name\"\n            inputName=\"name\"\n            inputValue={newName.name}\n            handleChange={handleNameChange}\n          />\n          <InputField\n            title=\"number\"\n            inputName=\"number\"\n            inputValue={newName.number}\n            handleChange={handleNameChange}\n          />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n      <h2>Numbers</h2>\n      <ul>\n        {persons.length > 0 ? mapPhonebook : \"No entries in the phonebook!\"}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport './index.css'\n\nimport App from \"./components/App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}